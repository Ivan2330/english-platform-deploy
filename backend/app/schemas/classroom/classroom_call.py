from pydantic import BaseModel, Field
from typing import Optional


# üìù –°—Ö–µ–º–∞ –¥–ª—è —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è –¥–∑–≤—ñ–Ω–∫–∞ —É –∫–ª–∞—Å—ñ
class ClassroomCallCreate(BaseModel):
    classroom_id: int = Field(..., example=1)
    status: str = Field(..., example="active")


# üîÑ –°—Ö–µ–º–∞ –¥–ª—è –æ–Ω–æ–≤–ª–µ–Ω–Ω—è —Å—Ç–∞—Ç—É—Å—É –¥–∑–≤—ñ–Ω–∫–∞
class ClassroomCallUpdate(BaseModel):
    call_id: int = Field(..., example=401)
    status: str = Field(..., example="ended")


# üóÇÔ∏è –°—Ö–µ–º–∞ –≤—ñ–¥–ø–æ–≤—ñ–¥—ñ –¥–ª—è –¥–∑–≤—ñ–Ω–∫–∞ —É –∫–ª–∞—Å—ñ
class ClassroomCallResponse(BaseModel):
    id: int = Field(..., example=401)
    classroom_id: int = Field(..., example=1)
    status: str = Field(..., example="active")
    started_at: str = Field(..., example="2024-01-15T16:00:00")
    ended_at: Optional[str] = Field(None, example="2024-01-15T17:00:00")

    class Config:
        orm_mode = True
