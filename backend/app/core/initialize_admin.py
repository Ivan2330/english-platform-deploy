import asyncio
from sqlalchemy.ext.asyncio import AsyncSession
from sqlalchemy.future import select
from app.core.database import get_async_session
from app.models.users.users import User, UserRole, Status  # ‚úÖ –Ü–º–ø–æ—Ä—Ç—É—î–º–æ Enum
from fastapi_users.password import PasswordHelper

async def ensure_admin():
    async for session in get_async_session():
        async with session.begin():
            # –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ, —á–∏ —ñ—Å–Ω—É—î –∞–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ç–æ—Ä
            result = await session.execute(select(User).where(User.username == "admin"))
            existing_admin = result.scalar_one_or_none()

            if existing_admin:
                print("‚úÖ –ê–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ç–æ—Ä –≤–∂–µ —ñ—Å–Ω—É—î, –¥–æ–¥–∞–≤–∞—Ç–∏ –Ω–µ –ø–æ—Ç—Ä—ñ–±–Ω–æ.")
                return

            # –°—Ç–≤–æ—Ä—é—î–º–æ –Ω–æ–≤–æ–≥–æ –∞–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ç–æ—Ä–∞, —è–∫—â–æ –π–æ–≥–æ –Ω–µ–º–∞—î
            print("üöÄ –°—Ç–≤–æ—Ä—é—î–º–æ –Ω–æ–≤–æ–≥–æ –∞–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ç–æ—Ä–∞...")

            password_helper = PasswordHelper()
            hashed_password = password_helper.hash("securepassword")

            new_admin = User(
                username="admin",
                email="admin@example.com",
                phone_number="1234567890",
                hashed_password=hashed_password,
                role=UserRole.STAFF.value,  # ‚úÖ –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ Enum —è–∫ string
                status=Status.ADMIN.value,  # ‚úÖ –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ Enum —è–∫ string
                is_admin=True,
                is_verified=True,
                is_active=True
            )

            session.add(new_admin)
            await session.commit()  # –§—ñ–∫—Å—É—î–º–æ –Ω–æ–≤–æ–≥–æ –∞–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ç–æ—Ä–∞

        print("üéâ –ù–æ–≤–∏–π –∞–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ç–æ—Ä —É—Å–ø—ñ—à–Ω–æ —Å—Ç–≤–æ—Ä–µ–Ω–∏–π!")

async def initialize_admin():
    await ensure_admin()
