version: '3.9'

services:
  backend:
    build: ./backend
    container_name: backend
    restart: always
    env_file:
      - ./backend/.env
    volumes:
      - ./backend:/app
    command: uvicorn main:app --host 0.0.0.0 --port 8000
    expose:
      - 8000
    depends_on:
      - db
      - redis

  frontend:
    build:
      context: ./frontend
      args:
        VITE_API_URL: "https://my-prime-academy.online"
        VITE_WS_URL: "wss://my-prime-academy.online"
    container_name: frontend
    restart: always
    volumes:
      - ./frontend:/app
      - /app/node_modules
    environment:
      - NODE_ENV=production
    expose:
      - 3000
    # command: npm run build

  nginx:
    image: nginx:latest
    container_name: nginx
    restart: always
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./frontend/dist:/var/www/frontend
      - ./nginx/certbot/conf:/etc/letsencrypt
      - ./nginx/certbot/www:/var/www/certbot
    depends_on:
      - backend
      - frontend

  certbot:
    image: certbot/certbot
    container_name: certbot
    volumes:
      - ./nginx/certbot/conf:/etc/letsencrypt
      - ./nginx/certbot/www:/var/www/certbot
    entrypoint: "/bin/sh -c '
      certbot certonly --webroot \
      --webroot-path=/var/www/certbot \
      --email my.primeacademy19@gmail.com \
      --agree-tos \
      --no-eff-email \
      -d my-prime-academy.online && \
      crond -f'"

  redis:
    image: redis:7-alpine
    container_name: redis
    restart: always
    ports:
      - "6379:6379"

  db:
    image: postgres:15
    container_name: postgres
    restart: always
    env_file:
      - ./backend/.env
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"

volumes:
  postgres_data:
