services:
  backend:
    build: ./backend
    container_name: backend
    restart: always
    env_file:
      - ./backend/.env
    volumes:
      - ./backend:/app
    command: uvicorn main:app --host 0.0.0.0 --port 8000
    expose:
      - 8000
    depends_on:
      - db
      - redis

  # frontend:
  #   build:
  #     context: ./frontend
  #     args:
  #       VITE_API_URL: "https://my-prime-academy.online"
  #       VITE_WS_URL: "wss://my-prime-academy.online"
  #   container_name: frontend
  #   restart: always
  #   volumes:
  #     - ./frontend:/app
  #   environment:
  #     - NODE_ENV=production
  #   expose:
  #     - 80
  #   depends_on:
  #     - backend
  #   # command: npm run build

  # nginx:
  #   image: nginx:latest
  #   container_name: nginx
  #   restart: always
  #   ports:
  #     - "80:80"
  #     - "443:443"
  #   volumes:
  #     - ./nginx/nginx.conf:/etc/nginx/nginx.conf
  #     - ./frontend/dist:/usr/share/nginx/html
  #     - ./nginx/certbot/conf:/etc/letsencrypt
  #     - ./nginx/certbot/www:/var/www/certbot
  #   depends_on:
  #     - backend
  #     - frontend

  nginx:
    build:
      context: ./frontend
      args:
      # ← вставте свої production URL
        VITE_API_URL: "https://my-prime-academy.online"
        VITE_WS_URL: "wss://my-prime-academy.online"
    container_name: nginx
    restart: always
    ports: ["80:80", "443:443"]
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/certbot/conf:/etc/letsencrypt:ro
      - ./nginx/certbot/www:/var/www/certbot
    depends_on: [backend]

  certbot:
    image: certbot/certbot
    container_name: certbot
    volumes:
      - ./nginx/certbot/conf:/etc/letsencrypt
      - ./nginx/certbot/www:/var/www/certbot
    entrypoint: >
      sh -c "while :; do
            certbot renew --webroot -w /var/www/certbot --quiet --agree-tos
            nginx -s reload 2>/dev/null || true
            sleep 12h; done"


  redis:
    image: redis:7-alpine
    container_name: redis
    restart: always
    ports:
      - "6379:6379"

  db:
    image: postgres:15
    container_name: postgres
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: 2111
      POSTGRES_DB: prime_platform_db
    volumes:
      - postgres_data:/var/lib/postgresql/data
    # ports:
    #   - "5432:5432"

volumes:
  postgres_data:
